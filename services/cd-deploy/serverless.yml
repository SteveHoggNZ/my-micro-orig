# Prefixing the service with the project name means permissions for the
# deployment resources can be locked down to project* e.g. S3 buckets etc.
service: ${self:custom.project}-cd-deploy

# To Do: don't have a deployment bucket per service!!!

custom:
  # The project.yml file will be in the local directory when using
  # Continuous Deployment, otherwise it is in the project directory
  project: ${file(./project.yml):name, file(../../project.yml):name}
  # Set the pipeline configuration to use
  pipeline: ${file(../../pipelines/basic.yml):CodePipeline,
              file(./pipelines/basic.yml):CodePipeline}
  # Define project_stage for accessing shared infrastructure cf stack
  # i.e. project-prod is a stack, project-dev is a stack etc
  project_stage: ${self:custom.project}-${self:provider.stage}

provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 128
  timeout: 3
  stage: prod
  stackTags:
    PROJECT: ${self:custom.project}
  region: ap-southeast-2
  deploymentBucket: ${cf:${self:custom.project_stage}.S3Src}

package:
  exclude:
  # Dev dependencies are installed here by buildspec.yml
  - node_modules_dev/**

functions:
  # deploy:
  #   handler: handler.deploy
  sup:
    handler: handler.sup

resources:
  Resources:
    # Creating a pipeline in the console then describing it is the easiest option
    # to see what needs to be defined i.e.
    # aws codepipeline get-pipeline --name <name>
    CodePipeline: ${self:custom.pipeline}
  Outputs:
    CodePipeline:
      Description: "Code Pipeline for the project"
      Value:
        { Ref: "CodePipeline" }
